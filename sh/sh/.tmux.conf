# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
            | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

set-window-option -g mode-keys vi

# bind-key -n C-r-j resize-pane -D

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+


# hit control-q control-h to resize left a panel, and so forth
bind-key -Tmy-keys C-h resize-pane -L
bind-key -Tmy-keys C-j resize-pane -D
bind-key -Tmy-keys C-k resize-pane -U
bind-key -Tmy-keys C-l resize-pane -R

# hit control-q control-w control-h to create a panel in left, and so forth
bind-key -Tmy-keys-window-ctl C-h split-window -b -h
bind-key -Tmy-keys-window-ctl C-j split-window -v
bind-key -Tmy-keys-window-ctl C-k split-window -b -v
bind-key -Tmy-keys-window-ctl C-l split-window -h

# hit control-w (after control-q) to activate my-keys-window-ctl maps
bind-key -Tmy-keys C-w switch-client -T my-keys-window-ctl

# Hit control-q to activate my-keys maps
bind-key -Troot C-q switch-client -Tmy-keys
